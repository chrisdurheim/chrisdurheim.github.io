<div class="mama-fish-saves-calculator" id="assets-needed-to-coast"> <h3 class="calculator-title">Assets Needed to Coast</h3> <div class="calculator-input-group" id=""> <div class="calculator-input"> <label for="target-monthly-spending-in-retirement" id="target-monthly-spending-in-retirement-label">Target Monthly Spending in Retirement</label><br/> <span class="input-prefix">$</span> <input type="text" class="currency" name="target-monthly-spending-in-retirement" id="target-monthly-spending-in-retirement" value="4,000" min="0"/> </div><div class="calculator-input"> <label for="target-withdrawal-rate" id="target-withdrawal-rate-label">3.50% target withdrawal rate</label><br/> <input type="range" class="slider slider--percent" name="target-withdrawal-rate" id="target-withdrawal-rate" value="0.035" min="0.01" max="0.1" step="0.0025"/> </div><div class="calculator-input"> <label for="target-coast-age" id="target-coast-age-label">Target Coast Age</label><br/> <input type="number" class="" name="target-coast-age" id="target-coast-age" value="35" min="0" max="100" step="1"/> </div><div class="calculator-input"> <label for="target-retirement-age" id="target-retirement-age-label">Target Retirement Age</label><br/> <input type="number" class="" name="target-retirement-age" id="target-retirement-age" value="50" min="0" max="100" step="1"/> </div><div class="calculator-input"> <label for="expected-return" id="expected-return-label">8.00% expected return</label><br/> <input type="range" class="slider slider--percent" name="expected-return" id="expected-return" value="0.08" min="0.01" max="0.15" step="0.0025"/> </div></div><div class="calculator-result"></div></div><script type="text/javascript">document.addEventListener('DOMContentLoaded', ()=>{console.log("Calculator js running"); function tag(type, value=undefined, klass=undefined, id=undefined){let el=document.createElement(type); if (klass){el.setAttribute('class', klass);}if (id){el.setAttribute('id', id);}if (value){el.innerText=value;}return el;}function toCurrency(value){if (value==0){return '-';}else{return '$' + value.toLocaleString(undefined,{maximumFractionDigits: 0});}}function parseCurrencyToFloat(value){result=parseFloat(value.replace(/[($) ._-]+/g, '').replace(/,/g, '')); if (isNaN(result)){return 0;}else{return result;}}function convertToCurrency(value){return value.toLocaleString();}console.log("Calculator helper functions loaded"); const calculator=document.querySelector('#assets-needed-to-coast'); if (calculator){console.log("Calculator found"); const inputs=calculator.querySelectorAll('input'); const currencyInputs=calculator.querySelectorAll('input.currency'); const targetMonthlySpendingInRetirementInput=calculator.querySelector('input#target-monthly-spending-in-retirement'); const targetMonthlySpendingInRetirementLabel=calculator.querySelector('#target-monthly-spending-in-retirement-label'); const targetWithdrawalRateInput=calculator.querySelector('input#target-withdrawal-rate'); const targetWithdrawalRateLabel=calculator.querySelector('#target-withdrawal-rate-label'); const targetCoastAgeInput=calculator.querySelector('input#target-coast-age'); const targetCoastAgeLabel=calculator.querySelector('#target-coast-age-label'); const targetRetirementAgeInput=calculator.querySelector('input#target-retirement-age'); const targetRetirementAgeLabel=calculator.querySelector('#target-retirement-age-label'); const expectedReturnInput=calculator.querySelector('input#expected-return'); const expectedReturnLabel=calculator.querySelector('#expected-return-label'); const outputDiv=calculator.querySelector('#assets-needed-to-coast .calculator-result'); function updateResults(){const targetMonthlySpendingInRetirement=parseCurrencyToFloat(targetMonthlySpendingInRetirementInput.value) || 0; const targetWithdrawalRate=parseFloat(targetWithdrawalRateInput.value) || 0; const targetCoastAge=parseFloat(targetCoastAgeInput.value) || 0; const targetRetirementAge=parseFloat(targetRetirementAgeInput.value) || 0; const expectedReturn=parseFloat(expectedReturnInput.value) || 0; targetWithdrawalRateLabel.innerHTML=(targetWithdrawalRate * 100).toFixed(2) + '% target withdrawal rate' ; expectedReturnLabel.innerHTML=(expectedReturn * 100).toFixed(2) + '% expected return' ; if (outputDiv){if (targetMonthlySpendingInRetirement < 0){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target monthly spending in retirement greater than 0', 'result-error')); return;}if (targetWithdrawalRate < 0.01){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target withdrawal rate greater than 1.0%', 'result-error')); return;}if (targetWithdrawalRate > 0.1){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target withdrawal rate less than 10.0%', 'result-error')); return;}if (targetCoastAge < 0){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target coast age greater than 0', 'result-error')); return;}if (targetCoastAge > 100){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target coast age less than 100', 'result-error')); return;}if (targetRetirementAge < 0){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target retirement age greater than 0', 'result-error')); return;}if (targetRetirementAge > 100){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target retirement age less than 100', 'result-error')); return;}if (targetCoastAge >=targetRetirementAge){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set target coast age less than target retirement age', 'result-error')); return;}if (expectedReturn < 0.01){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set expected return greater than 1.0%', 'result-error')); return;}if (expectedReturn > 0.15){outputDiv.innerHTML=''; outputDiv.appendChild(tag('p', 'Set expected return less than 15.0%', 'result-error')); return;}function calculateResult(){const retirementAssets=targetMonthlySpendingInRetirement * 12 / targetWithdrawalRate; const assetsNeededToCoast=retirementAssets / Math.pow(1 + expectedReturn, targetRetirementAge - targetCoastAge); let outputText=document.createDocumentFragment(); let baseText=document.createElement('p'); baseText.appendChild(document.createTextNode("Assets Needed to Coast: ")); baseText.appendChild(tag('span', toCurrency(assetsNeededToCoast), 'result-value')); let totalText=document.createElement('p'); totalText.appendChild(document.createTextNode("Assets at Retirement Age: ")); totalText.appendChild(tag('span', toCurrency(retirementAssets))); outputText.appendChild(baseText); outputText.appendChild(totalText); return outputText;}outputDiv.innerHTML=''; let outputHeading=document.createElement('h4'); outputHeading.innerText='Results'; outputDiv.appendChild(outputHeading); outputDiv.appendChild(calculateResult());}}/* Set calculator to auto-update on input changes */ for (let i=0; i < inputs.length; i +=1){inputs[i].addEventListener('input', ()=>{updateResults();});}/* Auto-format with commas */ for (let i=0; i < currencyInputs.length; i +=1){currencyInputs[i].addEventListener('input', ()=>{currencyInputs[i].value=convertToCurrency(parseCurrencyToFloat(currencyInputs[i].value));});}updateResults();}});</script>
