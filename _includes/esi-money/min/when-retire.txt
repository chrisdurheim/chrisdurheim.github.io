<style>.calculator{background-color: #F3F3F3; margin: 2rem auto; padding: 2rem 7.5%; border: 2px solid #0000B3;; max-width: 600px; clear: both;}.calculator-section{padding: 1rem 0;}.calculator-section h5{margin-top: 2rem;}h3.calculator-title, .calculator-result h4{padding: 1rem 0; text-align: center; text-decoration: underline; font-size: 2rem; text-transform: uppercase;}.calculator-section h4, .calculator-result h5{margin-bottom: 1rem; background-color: #0000B3; color: white; padding: 0.5rem; text-align: center;}.calculator-input{display: flex; flex-wrap: wrap; margin: 1rem 0 0;}.calculator-input label{flex: 0 0 100%; color: black;}.calculator-input .input-prefix{flex: 0 0 auto; padding: 0.5rem; margin: 0 0.25rem; line-height: 2rem;}.calculator-input input{flex: 1 0 auto; width: auto; max-width: 50%; padding: 0.5rem; margin: 0 0.25rem; font-size: 1rem; border: 1px solid #d6d6d6;}.calculator-input input:focus{outline: none; border: 1px solid #aaaaaa;}.calculator-input select.input-suffix{flex: 0 0 auto; width: auto; padding: 0.5rem; margin: 0 0.25rem;}input.calculator-slider{margin-top: 1rem; width: 100%; max-width: 100%;}.calculator-slider{-webkit-appearance: none; /* Override default CSS styles */ appearance: none; height: 0.5rem; /* Specified height */ border-radius: 0.5rem; border-color: #ddd; color: #ddd; background: #ddd; /* Grey background */ outline: none; /* Remove outline */ opacity: 1; /* Set transparency (for mouse-over effects on hover) */ -webkit-transition: .2s; /* 0.2 seconds transition on hover */ transition: opacity .2s; margin-top: 1rem !important; margin-bottom: 1rem !important; padding: 0 !important;}.calculator-slider:hover{background: #f5f5f5; /* Fully shown on mouse-over */}.calculator-slider::-webkit-slider-thumb{-webkit-appearance: none; /* Override default look */ appearance: none; width: 1.5rem; /* Set a specific slider handle width */ height: 1.5rem; /* Specified height */ border-radius: 50%; background: #0000B3; /* ESI Blue background */ cursor: pointer; /* Cursor on hover */}.calculator-slider::-moz-range-thumb{width: 1.5rem; /* Set a specific slider handle width */ height: 1.5rem; /* Specified height */ border-radius: 50%; background: #0000B3; /* ESI Blue background */ cursor: pointer; /* Cursor on hover */}.input-error{color: #ac0000; flex: 1 1 10rem; display: none;}.calculator-result{font-size: 0.9rem; margin-top: 2rem; overflow-x: auto;}.calculator-result .result-value{font-weight: bold;}.calculator-result .result-error{font-size: 1.5rem; color: #ac0000;}.calculator-result .calculator-highlighted-result{text-align: center; background-color: #ac0000; color: white; font-size: 1.8rem;}.calculator-result-table{max-width: 100%; overflow-x: scroll; font-size: 0.8rem;}.calculator-result-table tr{transition: background-color 50ms, color 50ms;}.calculator-result-table tr:hover td{background-color: #0000B3; color: white;}.calculator-result-table th{text-align: center;}.calculator-result-table td, .calculator-result-table th{padding: 0 0.5rem;}.calculator-result-table .currency-column{text-align: center;}button.calculator-button{width: 100%; background-color: #0000B3; margin: 0 auto; cursor: pointer; text-align: center;}.calculator-result-table th.base-color{background-color: black !important; color: white;}.calculator-result-table th.salary-color{background-color: green !important; color: white;}.calculator-result-table th.raise-color, .calculator-result-table th.needed-color{background-color: #ac0000 !important; color: white;}.calculator-result-table th.both-color, .calculator-result-table th.actual-color{background-color: #0000B3 !important; color: white;}#salary-chart, #difference-chart, #nest-egg-chart, #balance-chart{margin-top: -1rem; margin-bottom: 1rem; border: 2px solid #0000B3; background-color: white;}</style><form class="calculator" id="when-can-i-retire-calculator" action="#" accept-charset="UTF-8" method="post"> <h3 class="calculator-title">When Can I Retire?</h3> <div class="calculator-section"> <h4>Retirement Spending</h4> <div class="calculator-input"> <label for="retirement-needs">Retirement Spending Needs</label><br/> <span class="input-prefix">$</span> <input type="text" class="currency" name="retirement-needs" id="retirement-needs" value="60,000" min="0"/> </div><div class="calculator-input"> <label id="inflation-rate-label" for="inflation-rate">2.5% annual spending inflation</label><br/> <input value="2.5" class="calculator-slider" min="0" max="20" step="0.5" type="range" name="inflation-rate[]" id="inflation-rate"/> </div><div class="calculator-input"> <label id="safe-withdrawal-rate-label" for="safe-withrdrawal-rate">4.00% assumed annual withdrawal rate or earnings on assets</label><br/> <input value="4" class="calculator-slider" min="0.25" max="20" step="0.25" type="range" name="safe-withdrawal-rate[]" id="safe-withdrawal-rate"/> </div><div class="calculator-input"> <label for="side-hustle-income">Annual Side Hustle Income At Retirement</label><br/> <span class="input-prefix">$</span> <input type="text" class="currency" name="side-hustle-income" id="side-hustle-income" value="10,000" min="0"/> </div></div><div class="calculator-section"> <h4>Savings for Retirement</h4> <div class="calculator-input"> <label for="current-assets">Current Assets to be Used for Retirement Drawdown or Earnings</label><br/> <span class="input-prefix">$</span> <input type="text" class="currency" name="current-assets" id="current-assets" value="100,000" min="0"/> </div><div class="calculator-input"> <label id="investment-gain-rate-label" for="investment-gain-rate">8% annual return on investments</label><br/> <input value="8" class="calculator-slider" min="1" max="20" step="0.5" type="range" name="investment-gain-rate[]" id="investment-gain-rate"/> </div><div class="calculator-input"> <label for="annual-contribution">Annual Contributions to Assets</label><br/> <span class="input-prefix">$</span> <input type="text" class="currency" name="annual-contribution" id="annual-contribution" value="5,000" min="0"/> </div><div class="calculator-input"> <label id="contribution-increase-rate-label" for="contribution-increase-rate">0% annual increase in contributions</label><br/> <input value="0" class="calculator-slider" min="0" max="20" step="0.5" type="range" name="contribution-increase-rate[]" id="contribution-increase-rate"/> </div></div><div class="calculator-result" id="when-can-i-retire-result"> </div></form><script type="text/javascript">document.addEventListener('DOMContentLoaded', ()=>{function toCurrency(value){if (value==0){return '-';}else{return '$' + value.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ",");}}function parseCurrencyToFloat(value){result=parseFloat(value.replace(/[($)\s\._\-]+/g, '').replace(/,/g, '')); if (isNaN(result)){return 0;}else{return result;}}function convertToCurrency(value){return value.toLocaleString()}const calculator=document.querySelector('#when-can-i-retire-calculator'); if (calculator){const inputs=calculator.querySelectorAll('input'); const currencyInputs=calculator.querySelectorAll('input.currency'); /* Retirement Spending inputs */ const retirementNeedsInput=calculator.querySelector('input#retirement-needs'); const inflationRateInput=calculator.querySelector('input#inflation-rate'); const inflationRateLabel=calculator.querySelector('#inflation-rate-label'); const safeWithdrawalRateInput=calculator.querySelector('input#safe-withdrawal-rate'); const safeWithdrawalRateLabel=calculator.querySelector('#safe-withdrawal-rate-label'); const sideHustleIncomeInput=calculator.querySelector('input#side-hustle-income'); /* Retirement Savings inputs */ const currentAssetsInput=calculator.querySelector('input#current-assets'); const investmentGainRateInput=calculator.querySelector('input#investment-gain-rate'); const investmentGainRateLabel=calculator.querySelector('#investment-gain-rate-label'); const contributionIncreaseRateInput=calculator.querySelector('input#contribution-increase-rate'); const contributionIncreaseRateLabel=calculator.querySelector('#contribution-increase-rate-label'); const annualContributionInput=calculator.querySelector('input#annual-contribution'); /* Output */ const outputDiv=calculator.querySelector('#when-can-i-retire-result'); /* Calculate and update labels and results, flag errors */ function updateResults(){const retirementNeeds=parseCurrencyToFloat(retirementNeedsInput.value) || 0; const inflationRate=parseFloat(inflationRateInput.value) / 100.0 || 0; const safeWithdrawalRate=parseFloat(safeWithdrawalRateInput.value) / 100.0 || 1.00; const sideHustleIncome=parseCurrencyToFloat(sideHustleIncomeInput.value) || 0; const currentAssets=parseCurrencyToFloat(currentAssetsInput.value) || 0; const investmentGainRate=parseFloat(investmentGainRateInput.value) / 100.0 || 0; const annualContribution=parseCurrencyToFloat(annualContributionInput.value) || 0; const contributionIncreaseRate=parseFloat(contributionIncreaseRateInput.value) / 100.0 || 0; /* Update slider labels */ let inflationRateText=(inflationRate * 100).toFixed(1); inflationRateText +='% annual spending inflation'; inflationRateLabel.innerHTML=inflationRateText; let safeWithdrawalRateText=(safeWithdrawalRate * 100).toFixed(2); safeWithdrawalRateText +='% assumed annual withdrawal rate or earnings on assets'; safeWithdrawalRateLabel.innerHTML=safeWithdrawalRateText; let investmentGainRateText=(investmentGainRate * 100).toFixed(1); investmentGainRateText +='% annual return on investments'; investmentGainRateLabel.innerHTML=investmentGainRateText; let contributionIncreaseRateText=(contributionIncreaseRate * 100).toFixed(1); contributionIncreaseRateText +='% annual increase in contributions'; contributionIncreaseRateLabel.innerHTML=contributionIncreaseRateText; if (outputDiv){/* Validate Inputs */ if (retirementNeeds <=0.0){outputDiv.innerHTML='<span class="result-error">Set a retirement spending needs value greater than zero</span>'; return;}if (annualContribution <=0.0){outputDiv.innerHTML='<span class="result-error">Set an annual contribution amount greater than zero</span>'; return;}if (currentAssets * safeWithdrawalRate >=(retirementNeeds - sideHustleIncome)){outputDiv.innerHTML="<h4>You're already there!</h4>"; return;}function futureValue(payment, returnRate, increaseRate, years){if (returnRate==increaseRate){return payment * years * Math.pow(1 + returnRate, years - 1);}else{let numerator=Math.pow(1 + returnRate, years) - Math.pow(1 + increaseRate, years); let denomenator=(returnRate - increaseRate); return payment * numerator / denomenator;}}/* Update output */ let out='<h4>'; let years=-1; for (let i=0; i < 100; i +=1){const need=((retirementNeeds - sideHustleIncome) * Math.pow(1 + inflationRate, i-1)); const base=currentAssets * Math.pow(1 + investmentGainRate, i); const contrib=futureValue(annualContribution, investmentGainRate, contributionIncreaseRate, i); if (need < (base + contrib) * safeWithdrawalRate){years=i; break;}}out +='You are on track to retire in:</h4>'; out +='<div class="calculator-highlighted-result">'; if (years >=0){out +=years + ' year'; if (years !==1){out +='s';}}else{out +='More than 100 years';}out +='</div>'; outputDiv.innerHTML=out;}}/* Set calculator to auto-update on input changes */ for (let i=0; i < inputs.length; i +=1){inputs[i].addEventListener('input', ()=>{updateResults();});}/* Auto-format with commas */ for (let i=0; i < currencyInputs.length; i +=1){currencyInputs[i].addEventListener('input', ()=>{currencyInputs[i].value=convertToCurrency(parseCurrencyToFloat(currencyInputs[i].value));});}/* Update on load */ updateResults();}});</script>
